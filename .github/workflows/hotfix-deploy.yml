name: Emergency Hotfix Deploy

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy (use with caution!)'
        required: true
        default: 'main'
        type: string
      skip_all_checks:
        description: 'Skip ALL checks (EMERGENCY ONLY)'
        required: false
        default: false
        type: boolean
      reason:
        description: 'Reason for emergency deployment'
        required: true
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages-hotfix"
  cancel-in-progress: true

jobs:
  emergency-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Log emergency deployment
        run: |
          echo "üö® EMERGENCY DEPLOYMENT INITIATED üö®"
          echo "Branch: ${{ inputs.branch }}"
          echo "Reason: ${{ inputs.reason }}"
          echo "Skip checks: ${{ inputs.skip_all_checks }}"
          echo "Initiated by: ${{ github.actor }}"
          echo "Timestamp: $(date)"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Quick lint check
        if: ${{ !inputs.skip_all_checks }}
        run: npm run lint

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create deployment issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Emergency Deployment - ${{ inputs.reason }}',
              body: `## Emergency Deployment Report
              
              **Deployed by:** @${{ github.actor }}
              **Branch:** \`${{ inputs.branch }}\`
              **Timestamp:** ${new Date().toISOString()}
              **Reason:** ${{ inputs.reason }}
              **Checks skipped:** ${{ inputs.skip_all_checks }}
              **Deployment URL:** ${{ steps.deployment.outputs.page_url }}
              
              ## Action Required
              - [ ] Verify deployment is working correctly
              - [ ] Create proper PR for the changes if needed
              - [ ] Update documentation if necessary
              - [ ] Close this issue once verified
              
              **‚ö†Ô∏è This was an emergency deployment. Please review and follow up appropriately.**`,
              labels: ['emergency', 'deployment', 'needs-review']
            })