name: Continuous Integration

on:
  workflow_dispatch:
    inputs:
      node_versions:
        description: 'Node.js versions to test (comma-separated)'
        required: false
        default: '18.x,20.x'
        type: string
      run_security_audit:
        description: 'Run security audit'
        required: false
        default: true
        type: boolean
      audit_level:
        description: 'Security audit level'
        required: false
        default: 'moderate'
        type: choice
        options:
        - low
        - moderate
        - high
        - critical

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ${{ fromJson(format('["{0}"]', join(split(inputs.node_versions || '18.x,20.x', ','), '","'))) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Type check
        run: npx tsc --noEmit

      - name: Build project
        run: npm run build

      - name: Check build size
        run: |
          echo "Build completed successfully!"
          du -sh dist/
          echo "Build artifacts:"
          ls -la dist/

  security:
    runs-on: ubuntu-latest
    if: ${{ inputs.run_security_audit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=${{ inputs.audit_level || 'moderate' }}

      - name: Check for vulnerabilities (production only)
        run: npm audit --audit-level=${{ inputs.audit_level || 'moderate' }} --production